<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.mapper.DeliverynoteMapper" >
  <resultMap id="BaseResultMap" type="com.xzit.entity.Deliverynote" >
    <id column="deliveryNoteId" property="deliverynoteid" jdbcType="INTEGER" />
    <result column="deliveryNoteNo" property="deliverynoteno" jdbcType="VARCHAR" />
    <result column="salesListId" property="saleslistid" jdbcType="INTEGER" />
    <result column="pickUp" property="pickup" jdbcType="VARCHAR" />
    <result column="employeeId" property="employeeid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapDeliveryNoteVo" type="Deliverynote" extends="BaseResultMap">
    <association property="employee"
                 javaType="com.xzit.entity.Employee"
                 select="com.xzit.mapper.EmployeeMapper.selectByPrimaryKey"
                 column="employeeId"
                 fetchType="eager"></association>
    <association property="saleslist"
                 javaType="Saleslist"
                 select="com.xzit.mapper.SaleslistMapper.selectInfoByPrimaryKey"
                 column="salesListId"
                 fetchType="eager"></association>
  </resultMap>
  <select id="selectAllDeliveryNote" resultMap="ResultMapDeliveryNoteVo" parameterType="com.xzit.entity.DeliverynoteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deliverynote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    deliveryNoteId, deliveryNoteNo, salesListId, pickUp, employeeId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xzit.entity.DeliverynoteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deliverynote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from deliverynote
    where deliveryNoteId = #{deliverynoteid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deliverynote
    where deliveryNoteId = #{deliverynoteid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzit.entity.DeliverynoteExample" >
    delete from deliverynote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzit.entity.Deliverynote" >
    insert into deliverynote (deliveryNoteId, deliveryNoteNo, salesListId, 
      pickUp, employeeId)
    values (#{deliverynoteid,jdbcType=INTEGER}, #{deliverynoteno,jdbcType=VARCHAR}, #{saleslistid,jdbcType=INTEGER}, 
      #{pickup,jdbcType=VARCHAR}, #{employeeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xzit.entity.Deliverynote" >
    insert into deliverynote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deliverynoteid != null" >
        deliveryNoteId,
      </if>
      <if test="deliverynoteno != null" >
        deliveryNoteNo,
      </if>
      <if test="saleslistid != null" >
        salesListId,
      </if>
      <if test="pickup != null" >
        pickUp,
      </if>
      <if test="employeeid != null" >
        employeeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deliverynoteid != null" >
        #{deliverynoteid,jdbcType=INTEGER},
      </if>
      <if test="deliverynoteno != null" >
        #{deliverynoteno,jdbcType=VARCHAR},
      </if>
      <if test="saleslistid != null" >
        #{saleslistid,jdbcType=INTEGER},
      </if>
      <if test="pickup != null" >
        #{pickup,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzit.entity.DeliverynoteExample" resultType="java.lang.Integer" >
    select count(*) from deliverynote
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deliverynote
    <set >
      <if test="record.deliverynoteid != null" >
        deliveryNoteId = #{record.deliverynoteid,jdbcType=INTEGER},
      </if>
      <if test="record.deliverynoteno != null" >
        deliveryNoteNo = #{record.deliverynoteno,jdbcType=VARCHAR},
      </if>
      <if test="record.saleslistid != null" >
        salesListId = #{record.saleslistid,jdbcType=INTEGER},
      </if>
      <if test="record.pickup != null" >
        pickUp = #{record.pickup,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeid != null" >
        employeeId = #{record.employeeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deliverynote
    set deliveryNoteId = #{record.deliverynoteid,jdbcType=INTEGER},
      deliveryNoteNo = #{record.deliverynoteno,jdbcType=VARCHAR},
      salesListId = #{record.saleslistid,jdbcType=INTEGER},
      pickUp = #{record.pickup,jdbcType=VARCHAR},
      employeeId = #{record.employeeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzit.entity.Deliverynote" >
    update deliverynote
    <set >
      <if test="deliverynoteno != null" >
        deliveryNoteNo = #{deliverynoteno,jdbcType=VARCHAR},
      </if>
      <if test="saleslistid != null" >
        salesListId = #{saleslistid,jdbcType=INTEGER},
      </if>
      <if test="pickup != null" >
        pickUp = #{pickup,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        employeeId = #{employeeid,jdbcType=INTEGER},
      </if>
    </set>
    where deliveryNoteId = #{deliverynoteid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzit.entity.Deliverynote" >
    update deliverynote
    set deliveryNoteNo = #{deliverynoteno,jdbcType=VARCHAR},
      salesListId = #{saleslistid,jdbcType=INTEGER},
      pickUp = #{pickup,jdbcType=VARCHAR},
      employeeId = #{employeeid,jdbcType=INTEGER}
    where deliveryNoteId = #{deliverynoteid,jdbcType=INTEGER}
  </update>
</mapper>